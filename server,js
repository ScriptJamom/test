const express = require('express');
const { v4: uuidv4 } = require('uuid');
const crypto = require('crypto');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// Хранилище ключей (в памяти, для простоты)
const validKeys = [];

// Middleware для обработки JSON и статических файлов
app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

// Генерация ключа
app.post('/generate-key', (req, res) => {
  const rawKey = uuidv4(); // Уникальный идентификатор
  const hash = crypto.createHash('sha256').update(rawKey).digest('hex'); // Хешируем для безопасности
  validKeys.push(hash);
  res.json({ key: hash });
});

// Проверка ключа
app.post('/verify-key', (req, res) => {
  const { key } = req.body;
  if (!key) {
    return res.status(400).json({ valid: false, message: 'Ключ не указан' });
  }
  const isValid = validKeys.includes(key);
  res.json({ valid: isValid, message: isValid ? 'Ключ действителен' : 'Ключ недействителен' });
});

// Запуск сервера
app.listen(PORT, () => {
  console.log(`Сервер запущен на порту ${PORT}`);
});
